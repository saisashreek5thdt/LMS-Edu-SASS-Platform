// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model School {
  id           Int       @id @default(autoincrement())
  logo         String?
  coverImage   String?
  name         String    
  email        String    @unique
  password     String
  address      String
  phone        String
  isVerified   Boolean   @default(false)
  otp          String?
  otpExpiresAt DateTime?
  teachers     Teacher[]
  students     Student[]
  subscription Subscription? 
}

model Tutor {
  id           Int       @id @default(autoincrement())
  logo         String?
  coverImage   String?
  name         String    
  email        String    @unique
  password     String
  phone        String
  address      String
  isVerified   Boolean   @default(false)
  otp          String?
  otpExpiresAt DateTime?
  subscription Subscription? 
}

model Teacher {
  id         Int     @id @default(autoincrement())
  schoolId   Int
  name       String
  email      String  @unique
  password   String
  isVerified Boolean @default(false)
  school     School  @relation(fields: [schoolId], references: [id])
}

model Student {
  id         Int     @id @default(autoincrement())
  schoolId   Int
  name       String
  email      String  @unique
  password   String
  isVerified Boolean @default(false)
  school     School  @relation(fields: [schoolId], references: [id])
}

model Plan {
  id           Int       @id @default(autoincrement())
  title        String    // e.g., "Basic", "Professional"
  subtitle     String?   // Optional description
  priceMonthly Int?      // Price in INR cents or rupees (decide format)
  priceYearly  Int?      
  rate         String?   // Card rate text
  popular      Boolean   @default(false)
  features     Feature[] // List of features for the plan
  subscriptions Subscription[]
  createdAt    DateTime  @default(now())
}

model Feature {
  id      Int    @id @default(autoincrement())
  text    String // e.g., "Unlimited Teachers", "Bulk Upload"
  planId  Int
  plan    Plan   @relation(fields: [planId], references: [id])
}

// One-to-One relation between School/Tutor and their current Plan
model Subscription {
  id         Int      @id @default(autoincrement())
  planId     Int
  schoolId   Int?     @unique
  tutorId    Int?     @unique
  plan       Plan     @relation(fields: [planId], references: [id])
  school     School?  @relation(fields: [schoolId], references: [id])
  tutor      Tutor?   @relation(fields: [tutorId], references: [id])
  startDate  DateTime @default(now())
  endDate    DateTime?
  status     String   @default("active")
}